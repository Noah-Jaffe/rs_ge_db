name: Check for last GE update

on:
  #schedule: 
  # Run every 10 minutes
  # - cron: '0/10 * * * *'
  # Run manually from the Actions tab
  workflow_dispatch:
  
jobs:
  check_api_response:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #- name: Make a curl request to the API
      #  id: api_request
      #  run: |
      #    API_RESPONSE=$(curl -s "https://api.weirdgloop.org/exchange")
      #    echo "::set-output name=response::$API_RESPONSE"

      #- name: Read last_update_times.json
      #  id: read_json
      #  run: |
      #    JSON_CONTENTS=$(cat ./updater/last_update_times.json)
      #    echo "::set-output name=contents::$JSON_CONTENTS"

      #- name: Compare API response with JSON contents
      #  id: compare
      #  run: |
      #    if [ "${{ steps.api_request.outputs.response }}" != "${{ steps.read_json.outputs.contents }}" ]; then
      #      echo "API response is different from last_update_times.json"
      #      # Add your desired actions here, such as sending notifications or updating the file.
      #      echo "${{ steps.api_request.outputs.response }}" > ./updater/last_update_times.json
      #      git config user.name "GitHub Actions"
      #      git config user.email "actions@github.com"
      #      git add ./updater/last_update_times.json
      #      git commit -m "github actions makes a commit"
      #      git push origin main
      #    else
      #      echo "API response is the same as last_update_times.json"
      #    fi
      - name: Set up Python
        id: setup_py
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies (if needed)
        id: setup_dep
        run: |
          pip install requests
        
      - name: Run Python script
        id: run_py
        run: python updater/check_update_time.py
        
      - name: commit any changes from python script
        id: commit_changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add -A 
          git commit -m "Github Action `check_for_updates`, has updated a file!"
          git push origin main
        
